ARM GAS  /tmp/ccIqB9PD.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text._Error_Handler,"ax",%progbits
  18              		.align	1
  19              		.global	_Error_Handler
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	_Error_Handler:
  26              	.LFB133:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** 
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * Copyright (c) 2018 STMicroelectronics International N.V. 
  14:Src/main.c    ****   * All rights reserved.
  15:Src/main.c    ****   *
  16:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without 
  17:Src/main.c    ****   * modification, are permitted, provided that the following conditions are met:
  18:Src/main.c    ****   *
  19:Src/main.c    ****   * 1. Redistribution of source code must retain the above copyright notice, 
  20:Src/main.c    ****   *    this list of conditions and the following disclaimer.
  21:Src/main.c    ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  22:Src/main.c    ****   *    this list of conditions and the following disclaimer in the documentation
  23:Src/main.c    ****   *    and/or other materials provided with the distribution.
  24:Src/main.c    ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  25:Src/main.c    ****   *    contributors to this software may be used to endorse or promote products 
  26:Src/main.c    ****   *    derived from this software without specific written permission.
  27:Src/main.c    ****   * 4. This software, including modifications and/or derivative works of this 
  28:Src/main.c    ****   *    software, must execute solely and exclusively on microcontroller or
  29:Src/main.c    ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  30:Src/main.c    ****   * 5. Redistribution and use of this software other than as permitted under 
  31:Src/main.c    ****   *    this license is void and will automatically terminate your rights under 
ARM GAS  /tmp/ccIqB9PD.s 			page 2


  32:Src/main.c    ****   *    this license. 
  33:Src/main.c    ****   *
  34:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  35:Src/main.c    ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  36:Src/main.c    ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  37:Src/main.c    ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  38:Src/main.c    ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  39:Src/main.c    ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  40:Src/main.c    ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  41:Src/main.c    ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  42:Src/main.c    ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  43:Src/main.c    ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  44:Src/main.c    ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  45:Src/main.c    ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  46:Src/main.c    ****   *
  47:Src/main.c    ****   ******************************************************************************
  48:Src/main.c    ****   */
  49:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  50:Src/main.c    **** #include "main.h"
  51:Src/main.c    **** #include "stm32f4xx_hal.h"
  52:Src/main.c    **** #include "cmsis_os.h"
  53:Src/main.c    **** #include "gpio.h"
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE BEGIN Includes */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END Includes */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  60:Src/main.c    **** 
  61:Src/main.c    **** /* USER CODE BEGIN PV */
  62:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  63:Src/main.c    **** 
  64:Src/main.c    **** /* USER CODE END PV */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  67:Src/main.c    **** void SystemClock_Config(void);
  68:Src/main.c    **** void MX_FREERTOS_Init(void);
  69:Src/main.c    **** 
  70:Src/main.c    **** /* USER CODE BEGIN PFP */
  71:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  72:Src/main.c    **** 
  73:Src/main.c    **** /* USER CODE END PFP */
  74:Src/main.c    **** 
  75:Src/main.c    **** /* USER CODE BEGIN 0 */
  76:Src/main.c    **** 
  77:Src/main.c    **** /* USER CODE END 0 */
  78:Src/main.c    **** 
  79:Src/main.c    **** /**
  80:Src/main.c    ****   * @brief  The application entry point.
  81:Src/main.c    ****   *
  82:Src/main.c    ****   * @retval None
  83:Src/main.c    ****   */
  84:Src/main.c    **** int main(void)
  85:Src/main.c    **** {
  86:Src/main.c    ****   /* USER CODE BEGIN 1 */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* USER CODE END 1 */
ARM GAS  /tmp/ccIqB9PD.s 			page 3


  89:Src/main.c    **** 
  90:Src/main.c    ****   /* MCU Configuration----------------------------------------------------------*/
  91:Src/main.c    **** 
  92:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  93:Src/main.c    ****   HAL_Init();
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* USER CODE BEGIN Init */
  96:Src/main.c    **** 
  97:Src/main.c    ****   /* USER CODE END Init */
  98:Src/main.c    **** 
  99:Src/main.c    ****   /* Configure the system clock */
 100:Src/main.c    ****   SystemClock_Config();
 101:Src/main.c    **** 
 102:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 103:Src/main.c    **** 
 104:Src/main.c    ****   /* USER CODE END SysInit */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* Initialize all configured peripherals */
 107:Src/main.c    ****   MX_GPIO_Init();
 108:Src/main.c    ****   /* USER CODE BEGIN 2 */
 109:Src/main.c    **** 
 110:Src/main.c    ****   /* USER CODE END 2 */
 111:Src/main.c    **** 
 112:Src/main.c    ****   /* Call init function for freertos objects (in freertos.c) */
 113:Src/main.c    ****   MX_FREERTOS_Init();
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* Start scheduler */
 116:Src/main.c    ****   osKernelStart();
 117:Src/main.c    ****   
 118:Src/main.c    ****   /* We should never get here as control is now taken by the scheduler */
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* Infinite loop */
 121:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 122:Src/main.c    ****   while (1)
 123:Src/main.c    ****   {
 124:Src/main.c    **** 
 125:Src/main.c    ****   /* USER CODE END WHILE */
 126:Src/main.c    **** 
 127:Src/main.c    ****   /* USER CODE BEGIN 3 */
 128:Src/main.c    **** 
 129:Src/main.c    ****   }
 130:Src/main.c    ****   /* USER CODE END 3 */
 131:Src/main.c    **** 
 132:Src/main.c    **** }
 133:Src/main.c    **** 
 134:Src/main.c    **** /**
 135:Src/main.c    ****   * @brief System Clock Configuration
 136:Src/main.c    ****   * @retval None
 137:Src/main.c    ****   */
 138:Src/main.c    **** void SystemClock_Config(void)
 139:Src/main.c    **** {
 140:Src/main.c    **** 
 141:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct;
 142:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
 143:Src/main.c    **** 
 144:Src/main.c    ****     /**Configure the main internal regulator output voltage 
 145:Src/main.c    ****     */
ARM GAS  /tmp/ccIqB9PD.s 			page 4


 146:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 147:Src/main.c    **** 
 148:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 149:Src/main.c    **** 
 150:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 151:Src/main.c    ****     */
 152:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 153:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 154:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 155:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 156:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
 157:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
 158:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 159:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 160:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 161:Src/main.c    ****   {
 162:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 163:Src/main.c    ****   }
 164:Src/main.c    **** 
 165:Src/main.c    ****     /**Initializes the CPU, AHB and APB busses clocks 
 166:Src/main.c    ****     */
 167:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 168:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 169:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 170:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 171:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 172:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 173:Src/main.c    **** 
 174:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 175:Src/main.c    ****   {
 176:Src/main.c    ****     _Error_Handler(__FILE__, __LINE__);
 177:Src/main.c    ****   }
 178:Src/main.c    **** 
 179:Src/main.c    ****     /**Configure the Systick interrupt time 
 180:Src/main.c    ****     */
 181:Src/main.c    ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq()/1000);
 182:Src/main.c    **** 
 183:Src/main.c    ****     /**Configure the Systick 
 184:Src/main.c    ****     */
 185:Src/main.c    ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 186:Src/main.c    **** 
 187:Src/main.c    ****   /* SysTick_IRQn interrupt configuration */
 188:Src/main.c    ****   HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
 189:Src/main.c    **** }
 190:Src/main.c    **** 
 191:Src/main.c    **** /* USER CODE BEGIN 4 */
 192:Src/main.c    **** 
 193:Src/main.c    **** /* USER CODE END 4 */
 194:Src/main.c    **** 
 195:Src/main.c    **** /**
 196:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 197:Src/main.c    ****   * @param  file: The file name as string.
 198:Src/main.c    ****   * @param  line: The line in file as a number.
 199:Src/main.c    ****   * @retval None
 200:Src/main.c    ****   */
 201:Src/main.c    **** void _Error_Handler(char *file, int line)
 202:Src/main.c    **** {
ARM GAS  /tmp/ccIqB9PD.s 			page 5


  28              		.loc 1 202 0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.LVL0:
  35              	.L2:
  36 0000 FEE7     		b	.L2
  37              		.cfi_endproc
  38              	.LFE133:
  40              		.section	.text.SystemClock_Config,"ax",%progbits
  41              		.align	1
  42              		.global	SystemClock_Config
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  46              		.fpu fpv4-sp-d16
  48              	SystemClock_Config:
  49              	.LFB132:
 139:Src/main.c    **** 
  50              		.loc 1 139 0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 80
  53              		@ frame_needed = 0, uses_anonymous_args = 0
 139:Src/main.c    **** 
  54              		.loc 1 139 0
  55 0000 00B5     		push	{lr}
  56              	.LCFI0:
  57              		.cfi_def_cfa_offset 4
  58              		.cfi_offset 14, -4
  59 0002 95B0     		sub	sp, sp, #84
  60              	.LCFI1:
  61              		.cfi_def_cfa_offset 88
  62              	.LBB2:
 146:Src/main.c    **** 
  63              		.loc 1 146 0
  64 0004 0021     		movs	r1, #0
  65 0006 0191     		str	r1, [sp, #4]
  66 0008 2B4B     		ldr	r3, .L9
  67 000a 1A6C     		ldr	r2, [r3, #64]
  68 000c 42F08052 		orr	r2, r2, #268435456
  69 0010 1A64     		str	r2, [r3, #64]
  70 0012 1B6C     		ldr	r3, [r3, #64]
  71 0014 03F08053 		and	r3, r3, #268435456
  72 0018 0193     		str	r3, [sp, #4]
  73 001a 019B     		ldr	r3, [sp, #4]
  74              	.LBE2:
  75              	.LBB3:
 148:Src/main.c    **** 
  76              		.loc 1 148 0
  77 001c 0291     		str	r1, [sp, #8]
  78 001e 274B     		ldr	r3, .L9+4
  79 0020 1A68     		ldr	r2, [r3]
  80 0022 42F48042 		orr	r2, r2, #16384
  81 0026 1A60     		str	r2, [r3]
  82 0028 1B68     		ldr	r3, [r3]
ARM GAS  /tmp/ccIqB9PD.s 			page 6


  83 002a 03F48043 		and	r3, r3, #16384
  84 002e 0293     		str	r3, [sp, #8]
  85 0030 029B     		ldr	r3, [sp, #8]
  86              	.LBE3:
 152:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  87              		.loc 1 152 0
  88 0032 0123     		movs	r3, #1
  89 0034 0893     		str	r3, [sp, #32]
 153:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  90              		.loc 1 153 0
  91 0036 4FF48033 		mov	r3, #65536
  92 003a 0993     		str	r3, [sp, #36]
 154:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
  93              		.loc 1 154 0
  94 003c 0223     		movs	r3, #2
  95 003e 0E93     		str	r3, [sp, #56]
 155:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 25;
  96              		.loc 1 155 0
  97 0040 4FF48002 		mov	r2, #4194304
  98 0044 0F92     		str	r2, [sp, #60]
 156:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 336;
  99              		.loc 1 156 0
 100 0046 1922     		movs	r2, #25
 101 0048 1092     		str	r2, [sp, #64]
 157:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 102              		.loc 1 157 0
 103 004a 4FF4A872 		mov	r2, #336
 104 004e 1192     		str	r2, [sp, #68]
 158:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 105              		.loc 1 158 0
 106 0050 1293     		str	r3, [sp, #72]
 159:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 107              		.loc 1 159 0
 108 0052 0423     		movs	r3, #4
 109 0054 1393     		str	r3, [sp, #76]
 160:Src/main.c    ****   {
 110              		.loc 1 160 0
 111 0056 08A8     		add	r0, sp, #32
 112 0058 FFF7FEFF 		bl	HAL_RCC_OscConfig
 113              	.LVL1:
 114 005c 20BB     		cbnz	r0, .L7
 167:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 115              		.loc 1 167 0
 116 005e 0F23     		movs	r3, #15
 117 0060 0393     		str	r3, [sp, #12]
 169:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 118              		.loc 1 169 0
 119 0062 0223     		movs	r3, #2
 120 0064 0493     		str	r3, [sp, #16]
 170:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 121              		.loc 1 170 0
 122 0066 0023     		movs	r3, #0
 123 0068 0593     		str	r3, [sp, #20]
 171:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 124              		.loc 1 171 0
 125 006a 4FF4A053 		mov	r3, #5120
 126 006e 0693     		str	r3, [sp, #24]
ARM GAS  /tmp/ccIqB9PD.s 			page 7


 172:Src/main.c    **** 
 127              		.loc 1 172 0
 128 0070 4FF48053 		mov	r3, #4096
 129 0074 0793     		str	r3, [sp, #28]
 174:Src/main.c    ****   {
 130              		.loc 1 174 0
 131 0076 0521     		movs	r1, #5
 132 0078 03A8     		add	r0, sp, #12
 133 007a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 134              	.LVL2:
 135 007e B8B9     		cbnz	r0, .L8
 181:Src/main.c    **** 
 136              		.loc 1 181 0
 137 0080 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 138              	.LVL3:
 139 0084 0E4B     		ldr	r3, .L9+8
 140 0086 A3FB0030 		umull	r3, r0, r3, r0
 141 008a 8009     		lsrs	r0, r0, #6
 142 008c FFF7FEFF 		bl	HAL_SYSTICK_Config
 143              	.LVL4:
 185:Src/main.c    **** 
 144              		.loc 1 185 0
 145 0090 0420     		movs	r0, #4
 146 0092 FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 147              	.LVL5:
 188:Src/main.c    **** }
 148              		.loc 1 188 0
 149 0096 0022     		movs	r2, #0
 150 0098 0F21     		movs	r1, #15
 151 009a 4FF0FF30 		mov	r0, #-1
 152 009e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 153              	.LVL6:
 189:Src/main.c    **** 
 154              		.loc 1 189 0
 155 00a2 15B0     		add	sp, sp, #84
 156              	.LCFI2:
 157              		.cfi_remember_state
 158              		.cfi_def_cfa_offset 4
 159              		@ sp needed
 160 00a4 5DF804FB 		ldr	pc, [sp], #4
 161              	.L7:
 162              	.LCFI3:
 163              		.cfi_restore_state
 162:Src/main.c    ****   }
 164              		.loc 1 162 0
 165 00a8 A221     		movs	r1, #162
 166 00aa 0648     		ldr	r0, .L9+12
 167 00ac FFF7FEFF 		bl	_Error_Handler
 168              	.LVL7:
 169              	.L8:
 176:Src/main.c    ****   }
 170              		.loc 1 176 0
 171 00b0 B021     		movs	r1, #176
 172 00b2 0448     		ldr	r0, .L9+12
 173 00b4 FFF7FEFF 		bl	_Error_Handler
 174              	.LVL8:
 175              	.L10:
ARM GAS  /tmp/ccIqB9PD.s 			page 8


 176              		.align	2
 177              	.L9:
 178 00b8 00380240 		.word	1073887232
 179 00bc 00700040 		.word	1073770496
 180 00c0 D34D6210 		.word	274877907
 181 00c4 00000000 		.word	.LC0
 182              		.cfi_endproc
 183              	.LFE132:
 185              		.section	.text.main,"ax",%progbits
 186              		.align	1
 187              		.global	main
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 191              		.fpu fpv4-sp-d16
 193              	main:
 194              	.LFB131:
  85:Src/main.c    ****   /* USER CODE BEGIN 1 */
 195              		.loc 1 85 0
 196              		.cfi_startproc
 197              		@ Volatile: function does not return.
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200 0000 08B5     		push	{r3, lr}
 201              	.LCFI4:
 202              		.cfi_def_cfa_offset 8
 203              		.cfi_offset 3, -8
 204              		.cfi_offset 14, -4
  93:Src/main.c    **** 
 205              		.loc 1 93 0
 206 0002 FFF7FEFF 		bl	HAL_Init
 207              	.LVL9:
 100:Src/main.c    **** 
 208              		.loc 1 100 0
 209 0006 FFF7FEFF 		bl	SystemClock_Config
 210              	.LVL10:
 107:Src/main.c    ****   /* USER CODE BEGIN 2 */
 211              		.loc 1 107 0
 212 000a FFF7FEFF 		bl	MX_GPIO_Init
 213              	.LVL11:
 113:Src/main.c    **** 
 214              		.loc 1 113 0
 215 000e FFF7FEFF 		bl	MX_FREERTOS_Init
 216              	.LVL12:
 116:Src/main.c    ****   
 217              		.loc 1 116 0
 218 0012 FFF7FEFF 		bl	osKernelStart
 219              	.LVL13:
 220              	.L12:
 221 0016 FEE7     		b	.L12
 222              		.cfi_endproc
 223              	.LFE131:
 225              		.section	.rodata.SystemClock_Config.str1.4,"aMS",%progbits,1
 226              		.align	2
 227              	.LC0:
 228 0000 5372632F 		.ascii	"Src/main.c\000"
 228      6D61696E 
ARM GAS  /tmp/ccIqB9PD.s 			page 9


 228      2E6300
 229              		.text
 230              	.Letext0:
 231              		.file 2 "/home/droid/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/machine/_default_typ
 232              		.file 3 "/home/droid/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_stdint.h"
 233              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 234              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 235              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 236              		.file 7 "/home/droid/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/lock.h"
 237              		.file 8 "/home/droid/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/_types.h"
 238              		.file 9 "/home/droid/gcc-arm-none-eabi-7-2018-q2-update/lib/gcc/arm-none-eabi/7.3.1/include/stddef
 239              		.file 10 "/home/droid/gcc-arm-none-eabi-7-2018-q2-update/arm-none-eabi/include/sys/reent.h"
 240              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 241              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 242              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 243              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
 244              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 245              		.file 16 "Inc/gpio.h"
 246              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS/cmsis_os.h"
ARM GAS  /tmp/ccIqB9PD.s 			page 10


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccIqB9PD.s:18     .text._Error_Handler:0000000000000000 $t
     /tmp/ccIqB9PD.s:25     .text._Error_Handler:0000000000000000 _Error_Handler
     /tmp/ccIqB9PD.s:41     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccIqB9PD.s:48     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccIqB9PD.s:178    .text.SystemClock_Config:00000000000000b8 $d
     /tmp/ccIqB9PD.s:186    .text.main:0000000000000000 $t
     /tmp/ccIqB9PD.s:193    .text.main:0000000000000000 main
     /tmp/ccIqB9PD.s:226    .rodata.SystemClock_Config.str1.4:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_Init
MX_GPIO_Init
MX_FREERTOS_Init
osKernelStart
